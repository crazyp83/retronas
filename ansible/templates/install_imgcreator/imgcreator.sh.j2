#!/bin/bash

set -e
#set -x

#IFS=$'\n'
FMT_DIR=/data/retronas/config/formats
IMG_DIR=/data/retronas/images
MOUNT=0

_usage() {
    echo "BLAH"
    exit 1
}

error() {
    echo "ERROR: $1"
}

log() {
    echo "LOG: $1"
}

[ ! -d ${FMT_DIR} ] && exit 1

while getopts "v:n:p:m" OPTS; do
    case "${OPTS}" in
        m)
            MOUNT=1
            ;;
        n)
            NAME=${OPTARG}
            ;;
        p)
            PROFILE=${OPTARG}
            ;;
        v)
            VOLUME=${OPTARG}
            ;;
        *)
            _usage
            ;;
    esac
done

REQFAIL=0
[ -z "${PROFILE}" ] && error "Profile is required" && REQFAIL=1
[ ! -f "${FMT_DIR}/${PROFILE}" ] && error "Profile $PROFILE not found" && REQFAIL=1
[ -z "${NAME}" ] && error "Name is required" && REQFAIL=1
[ $REQFAIL -eq 1 ] && exit 1

[ ! -d "${IMG_DIR}" ] && mkdir -p "${IMG_DIR}"
### this should come as input along with VOLUME, NAME and MOUNT

. "${FMT_DIR}/${PROFILE}"
OUTNAME="${IMG_DIR}/${NAME}.${EXT}"

CLI_OPTS="of=${OUTNAME}"
[ ! -z "$SEEK" ] && CLI_OPTS+=" seek=$SEEK"
[ ! -z "$BYTESIZE" ] && CLI_OPTS+=" bs=$BYTESIZE"

#create
if [ ! -f ${OUTNAME} ]
then

    dd if=/dev/zero $CLI_OPTS count=$((${SIDES}*${TRACKS}*${SECTORS}))
    sync
    [ ! -f "${OUTNAME}" ] && error "Failed to create file ${OUTNAME}" && exit 1

    PARTS=()
    PARTNUM=0 # consider part 0 as blk dev
    if [ ! -z $LAYOUT ]
    then
        PARTNUM=1
        PARTED_OPT="-s -a optimal -- ${OUTNAME}"
        FSTART=1MiB

        # use parted to create a LAYOUT
        IFS=', ' read -r -a LAYOUT <<< "$LAYOUT"
        for OPTIONS in ${LAYOUT[@]}
        do
            COMMAND=$(echo $OPTIONS | cut -d':' -f1)
            case $COMMAND in
                label)
                    LABEL=$(echo $OPTIONS | cut -d':' -f2)
                    PARTED_OPT+=" mk$COMMAND $LABEL"
                    ;;
                part)
                    TYPE=$(echo $OPTIONS | cut -d':' -f2)
                    FSTYPE=$(echo $OPTIONS | cut -d':' -f3)
                    FSIZE=$(echo $OPTIONS | cut -d':' -f4)
                    PARTED_OPT+=" mk$COMMAND $TYPE $FSTYPE $FSTART $FSIZE"
                    FSTART=$FSIZE
                    PARTNUMS=$((PARTNUM++))
                    PARTS[$PARTNUMS]=$FSTYPE
                    ;;
                addn)
                    PARTED_OPT+=" $OPTIONS"
                    ;;
            esac
        done
        parted $PARTED_OPT
    else
        PARTS[$PARTNUM]=$FS
    fi
    sync

    DEVNAME=$OUTNAME
    if [ $PARTNUM -gt 0 ]
    then
        # loop
        LODEV=/dev/loop2023
        if losetup -a | grep $LODEV 
        then
            losetup -d $LODEV
        fi
        losetup -P $LODEV ${OUTNAME}
        DEVNAME=$LODEV
    fi

    #format

    for PART in ${!PARTS[@]}
    do
        FCLI_OPTS=""
        PARTMAP=p${PART}
        [ $PARTNUM -eq 0 ] && PARTMAP="" # unset for blkdev
        case ${PARTS[$PART]} in
            fat12|FAT12)
                [ ! -z "$VOLUME" ] && FCLI_OPTS+=" -n ${VOLUME}"
                mkfs.vfat -F12 -I -v $FCLI_OPTS "${DEVNAME}${PARTMAP}"
                ;;
            fat32|FAT32)
                [ ! -z "$VOLUME" ] && FCLI_OPTS+=" -n ${VOLUME}"
                mkfs.vfat -F32 -I -v $FCLI_OPTS "${DEVNAME}${PARTMAP}"
                ;;
            ext[2-4]|EXT[2-4])
                [ ! -z "$VOLUME" ] && FCLI_OPTS+=" -L ${VOLUME}"
                mke2fs -t ${PARTS[$PART]} $FCLI_OPTS "${DEVNAME}${PARTMAP}"
                ;;
            #affs[0-7])
            #    parted -s -- $FCLI_OPTS "${DEVNAME}${PARTMAP}"
            #    ;;
            *)
            error "Unsupported: ${PARTS[$PART]}"
            ;;
        esac
    done    
        if [ $PARTNUM -gt 0 ]
        then
            if losetup -a | grep $LODEV
            then
                losetup -d $LODEV
            fi
        fi
    sync
else
    error "File exists: ${OUTNAME}"
fi